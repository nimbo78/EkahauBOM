name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Extract changelog for this version
      id: changelog
      run: |
        # Extract changelog section for this version
        VERSION="${{ steps.get_version.outputs.VERSION }}"

        # Try to extract changelog section between version headers
        CHANGELOG_CONTENT=$(awk "/## \[${VERSION}\]/{flag=1; next} /## \[/{flag=0} flag" CHANGELOG.md || echo "See [CHANGELOG.md](https://github.com/htechno/EkahauBOM/blob/main/CHANGELOG.md) for details.")

        # If no specific section found, use generic message
        if [ -z "$CHANGELOG_CONTENT" ]; then
          CHANGELOG_CONTENT="See [CHANGELOG.md](https://github.com/htechno/EkahauBOM/blob/main/CHANGELOG.md#${VERSION//.}) for details."
        fi

        # Save to file for multiline content
        echo "$CHANGELOG_CONTENT" > changelog_extract.md

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release v${{ steps.get_version.outputs.VERSION }}
        body_path: changelog_extract.md
        draft: false
        prerelease: false
        files: |
          dist/*.whl
          dist/*.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
